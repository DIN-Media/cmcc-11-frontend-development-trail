<?xml version="1.0" encoding="UTF-8"?>
<included>
  <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
  <!--Workaround to get the property injected. See https://github.com/spring-cloud/spring-cloud-sleuth/issues/330-->
  <springProperty scope="context" name="springAppName" source="spring.application.name"/>
  <springProperty scope="context" name="loggingFileName" source="logging.file.name"/>
  <if condition='"${loggingFileName}".isEmpty()'>
    <then>
      <!--
        If 'LOGGING_FILE_NAME' is empty, we don't want to log into any file.
        So in order not to break the logging config where the file appender is referenced,
        we have to pretend, there is an appender named 'FILE'
      -->
      <appender name="FILE" class="ch.qos.logback.core.helpers.NOPAppender"/>
    </then>
    <else>
      <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/${springAppName:-spring}.log}"/>
      <include resource="org/springframework/boot/logging/logback/file-appender.xml"/>
    </else>
  </if>
  <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

</included>
