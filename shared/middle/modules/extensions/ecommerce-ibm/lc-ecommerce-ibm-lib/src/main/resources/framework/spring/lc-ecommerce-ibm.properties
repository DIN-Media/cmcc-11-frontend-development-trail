###############################################################################
# CoreMedia Livecontext Configuration
###############################################################################
# do not configure the wcs version, if the wcs storeinfo handler already supports version information
livecontext.ibm.wcs.version=

livecontext.service.credentials.username=cmadmin
# the password may also be encrypted via bin/cm encryptpasswordproperty tool
livecontext.service.credentials.password=VTJjyo0AYSnXFHI201yo

# The default locale for the commerce system. This may be used as fallback if certain information are
# not set on localized commerce objects. If, for example, the german seo segment for a product is not
# given, the CAE tries to read the seo segment for the default locale.
livecontext.ibm.default.locale=en_US

# The _internal_ name of the commerce host. This hostname is used for the backend connection
# from CAE to commerce server
livecontext.ibm.wcs.host=shop-helios.blueprint-box.vagrant
livecontext.ibm.wcs.url=http://${livecontext.ibm.wcs.host}
livecontext.ibm.wcs.secureUrl=https://${livecontext.ibm.wcs.host}

livecontext.ibm.wcs.rest.path=/wcs/resources
livecontext.ibm.wcs.rest.url=${livecontext.ibm.wcs.url}${livecontext.ibm.wcs.rest.path}
livecontext.ibm.wcs.rest.secureUrl=${livecontext.ibm.wcs.secureUrl}${livecontext.ibm.wcs.rest.path}
livecontext.ibm.wcs.rest.search.url=${livecontext.ibm.wcs.url}:3737/search/resources
livecontext.ibm.wcs.rest.search.secureUrl=${livecontext.ibm.wcs.secureUrl}:3738/search/resources

#
# These properties describe the virtual host that forwards to the WCS.
# It is used by both the live and the preview CAE, hence the values
# must be overridden. In the preview CAE it contains the virtual host
# for the preview-production WCS and in the live CAE the virtual host
# for the live-production WCS.
#
# do not use schema (http/https) here, or else links will have only this scheme even if the page is accessed with a different one.
livecontext.apache.wcs.host=shop-preview-production-helios.blueprint-box.vagrant
livecontext.apache.wcs.url=//${livecontext.apache.wcs.host}
livecontext.apache.wcs.secureUrl=https://${livecontext.apache.wcs.host}

#
# In some cases it is necessary to point to the various types of WCS
# explicitly. The studio for example, needs to know the preview-production
# and preview WCS for previewing the aurora shop.
#
# The preview virtual host forwards to the preview-preview WCS
# do not use schema (http/https) here, or else links will have only this scheme even if the page is accessed with a different one.
livecontext.apache.preview.wcs.host=shop-preview-helios.blueprint-box.vagrant
livecontext.apache.preview.wcs.url=//${livecontext.apache.preview.wcs.host}
livecontext.apache.preview.wcs.secureUrl=https://${livecontext.apache.preview.wcs.host}

# The preview production virtual host forwards to the preview production WCS
# do not use schema (http/https) here, or else links will have only this scheme even if the page is accessed with a different one.
livecontext.apache.preview.production.wcs.host=shop-preview-production-helios.blueprint-box.vagrant
livecontext.apache.preview.production.wcs.url=//${livecontext.apache.preview.production.wcs.host}
livecontext.apache.preview.production.wcs.secureUrl=https://${livecontext.apache.preview.production.wcs.host}

# The live production virtual host forwards to the live production WCS
# do not use schema (http/https) here, or else links will have only this scheme even if the page is accessed with a different one.
livecontext.apache.live.production.wcs.host=shop-helios.blueprint-box.vagrant
livecontext.apache.live.production.wcs.url=//${livecontext.apache.live.production.wcs.host}
livecontext.apache.live.production.wcs.secureUrl=https://${livecontext.apache.live.production.wcs.host}

livecontext.ibm.wcs.store.url=http:${livecontext.apache.preview.production.wcs.url}/wcsstore/{catalog.asset.store}
livecontext.managementtool.web.url=${livecontext.ibm.wcs.secureUrl}:8000/lobtools/CoreMediaManagementCenterWrapper.html

livecontext.ibm.wcs.storefront.path=/wcs/shop
livecontext.ibm.wcs.storefront.url=${livecontext.apache.wcs.url}${livecontext.ibm.wcs.storefront.path}/
livecontext.ibm.wcs.storefront.secureUrl=${livecontext.apache.wcs.secureUrl}${livecontext.ibm.wcs.storefront.path}/
livecontext.ibm.wcs.storefront.preview.url=${livecontext.apache.preview.wcs.url}/webapp/remote/preview/servlet/
livecontext.ibm.wcs.storefront.preview.secureUrl=${livecontext.apache.preview.wcs.secureUrl}/webapp/remote/preview/servlet/

livecontext.ibm.wcs.store.catalog.asset.path=/wcsstore/${livecontext.ibm.wcs.catalog.asset.store.aurora}

livecontext.ibm.wcs.assets.url=http:${livecontext.apache.wcs.url}${livecontext.ibm.wcs.storefront.path}/{catalog.asset.store}
livecontext.ibm.wcs.assets.secureUrl=${livecontext.apache.wcs.secureUrl}${livecontext.ibm.wcs.storefront.path}/{catalog.asset.store}

# The cookie domain which will be set for every cookie the CAE adds to a given response
# see com.coremedia.livecontext.hybrid.CookieLeveler
livecontext.cookie.domain=.blueprint-box.vagrant

livecontext.ibm.wcs.url-keyword=cm
livecontext.ibm.wcs.default.url=${livecontext.ibm.wcs.storefront.url}/{language}/{storeName}
livecontext.ibm.wcs.preview.url=${livecontext.ibm.wcs.storefront.preview.url}/{language}/{storeName}
# Defines the max depth used when the SEO breadcrumb is build for a link
livecontext.ibm.storefront.seo.url=${livecontext.ibm.wcs.default.url}/{seoSegment}
livecontext.ibm.storefront.seo.preview.url=${livecontext.ibm.wcs.preview.url}/{seoSegment}

livecontext.slp.segmentPath=livecontext-search-landing-pages
livecontext.ibm.wcs.search-result-redirect.url=/SearchDisplay?storeId={storeId}&catalogId={catalogId}&langId={langId}&pageSize=12&searchTerm={searchTerm}
livecontext.ibm.wcs.checkout-redirect.url=/OrderCalculate?calculationUsageId=-1&storeId={storeId}&updatePrices=1&catalogId={catalogId}&orderId=.&langId={langId}&URL=AjaxOrderItemDisplayView
livecontext.ibm.wcs.loginForm.url=/UserRegistrationForm?catalogId={catalogId}&langId={langId}&storeId={storeId}&URL={nexturl}
livecontext.ibm.wcs.logout.url=/Logoff?storeId={storeId}&URL={nexturl}

commerce.sessionid=JSESSIONID

livecontext.ibm.wcs.store.name.aurora=AuroraESite
livecontext.ibm.wcs.currency.aurora=USD
livecontext.ibm.wcs.catalog.asset.store.aurora=ExtendedSitesCatalogAssetStore

livecontext.ibm.wcs.store.name.aurorab2b=AuroraB2BESite
livecontext.ibm.wcs.catalog.id.aurorab2b=10101
livecontext.ibm.wcs.store.id.aurorab2b=10303
livecontext.ibm.wcs.currency.aurorab2b=USD
livecontext.ibm.wcs.catalog.asset.store.aurorab2b=ExtendedSitesCatalogAssetStore

#rest connector httpClient configuration
livecontext.rest.connector.connectionPoolSize=200
livecontext.rest.connector.connectionTimeout=10000
livecontext.rest.connector.socketTimeout=30000

# An optional authentication header for making REST calls to the WCS.
# If the name is left empty, no header is sent.
livecontext.rest.connector.authHeaderName=
livecontext.rest.connector.authHeaderValue=

#storefront connector httpClient configuration
livecontext.storefront.connector.connectionPoolSize=200
livecontext.storefront.connector.connectionTimeout=10000
livecontext.storefront.connector.socketTimeout=30000

#contract preview for b2b scenario
livecontext.ibm.contract.preview.url=/Logon?logonId=${livecontext.ibm.contract.preview.credentials.username}&logonPassword=${livecontext.ibm.contract.preview.credentials.password}\
  &URL=ContractSetInSession?URL={redirectUrl}&reLogonURL=LogonForm&storeId={storeId}&catalogId={catalogId}&langId={langId}
livecontext.wcs9.contract.preview.url=\
  /Logoff\
    ?storeId={storeId}\
    &URL=Logon\
      ?storeId={storeId}\
      &logonId=${livecontext.ibm.contract.preview.credentials.username}\
      &logonPassword=${livecontext.ibm.contract.preview.credentials.password}\
      &reLogonURL=LogonForm\
      &catalogId={catalogId}\
      &langId={langId}\
      &URL=ContractSetInSession\
        ?{{contractIdParams}}\
        &URL={redirectUrl}
livecontext.ibm.contract.preview.credentials.username=preview
livecontext.ibm.contract.preview.credentials.password=passw0rd

livecontext.ibm.product.non-seo.url=ProductDisplay?productId={productId}&storeId={storeId}&langId={langId}
livecontext.ibm.category.non-seo.url=CategoryDisplay?categoryId={categoryId}&storeId={storeId}&langId={langId}

# List of properties used by TokenResolvers that are registered at a TokenReplacingLinkTransformer.
# In URLs a token will be defined without the "urlToken." prefix. It will then be replaced with the following values.
# E.g. the URL "//{corporate.host}/blueprint/servlet/corporate" will be transformed to the Corporate homepage.
urlToken.aurora.host=${livecontext.apache.wcs.host}
urlToken.aurorab2b.host=${livecontext.apache.wcs.host}

# Public aliases for usage outside this extension
livecontext.storefront.url=${livecontext.ibm.wcs.storefront.url}
livecontext.url-keyword=${livecontext.ibm.wcs.url-keyword}

livecontext.ibm.wcs.cache.invalidation.maxWaitInMilliseconds=0
livecontext.ibm.wcs.cache.invalidation.chunkSize=500

livecontext.ibm.storeInfo.delayOnError=30

livecontext.ibm.languageMapping.delayOnErrorSeconds=30

cache.capacities.ecommerce.availability=${livecontext.ecommerce.cache.availability.capacity:10000}
cache.capacities.ecommerce.commerceuser=${livecontext.ecommerce.cache.commerceUser.capacity:500}
cache.capacities.ecommerce.contract=${livecontext.ecommerce.cache.contract.capacity:500}
cache.capacities.ecommerce.contractsbyuser=${livecontext.ecommerce.cache.contractsByUser.capacity:200}
cache.capacities.ecommerce.contractidsbyuser=${livecontext.ecommerce.cache.contractIdsByUser.capacity:1000}
cache.capacities.ecommerce.previewusercredentials=${livecontext.ecommerce.cache.previewUserCredentials.capacity:10}
cache.capacities.ecommerce.promotion=${livecontext.ecommerce.cache.promotion.capacity:500}
cache.capacities.ecommerce.promotions=${livecontext.ecommerce.cache.promotions.capacity:500}
cache.capacities.ecommerce.storeinfo=${livecontext.ecommerce.cache.storeInfo.capacity:100}
cache.capacities.ecommerce.userisloggedin=${livecontext.ecommerce.cache.userIsLoggedIn.capacity:500}
cache.capacities.ecommerce.workspaces=${livecontext.ecommerce.cache.workspaceLists.capacity:100}

cache.timeout-seconds.ecommerce.availability=${livecontext.ecommerce.cache.availability.time:300}
cache.timeout-seconds.ecommerce.commerceuser=${livecontext.ecommerce.cache.commerceUser.time:10}
cache.timeout-seconds.ecommerce.contract=${livecontext.ecommerce.cache.contract.time:3600}
cache.timeout-seconds.ecommerce.contractsbyuser=${livecontext.ecommerce.cache.contractsByUser.time:60}
cache.timeout-seconds.ecommerce.contractidsbyuser=${livecontext.ecommerce.cache.contractIdsByUser.time:3600}
cache.timeout-seconds.ecommerce.previewusercredentials=${livecontext.ecommerce.cache.previewUserCredentials.capacity:300}
cache.timeout-seconds.ecommerce.promotion=${livecontext.ecommerce.cache.promotion.time:3600}
cache.timeout-seconds.ecommerce.promotions=${livecontext.ecommerce.cache.promotions.time:3600}
cache.timeout-seconds.ecommerce.storeinfo=${livecontext.ecommerce.cache.storeInfo.time:86400}
cache.timeout-seconds.ecommerce.userisloggedin=${livecontext.ecommerce.cache.userIsLoggedIn.time:10}
cache.timeout-seconds.ecommerce.workspaces=${livecontext.ecommerce.cache.workspaceLists.time:3600}
