<?xml version="1.0" encoding="UTF-8"?>
<local:UploadDialogBase xmlns:fx="http://ns.adobe.com/mxml/2009"
                        xmlns:local="com.coremedia.blueprint.studio.upload.dialog.*"
                        xmlns:exml="http://www.jangaroo.net/exml/0.8"
                        xmlns="exml:ext.config"
                        xmlns:ui="exml:com.coremedia.ui.config"
                        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
                        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
                        xmlns:upload="exml:com.coremedia.blueprint.studio.config.upload"
                        xmlns:bpb-components="exml:com.coremedia.blueprint.base.components.config"
                        title="{resourceManager.getString('com.coremedia.blueprint.studio.UploadStudioPlugin', 'UploadFileAction_menu_item_text')}"
                        id_="fileUploadDialog"
                        width="{UploadDialogBase.UPLOAD_WINDOW_WIDTH}"
                        height="{UploadDialogBase.UPLOAD_WINDOW_HEIGHT}"
                        minHeight="{UploadDialogBase.UPLOAD_WINDOW_HEIGHT}"
                        resizable="true"
                        resizeHandles="s"
                        scrollable="y"
                        modal="true"
                        ui="{WindowSkin.GRID_200.getSkin()}">
  <fx:Metadata>
    [ResourceBundle('com.coremedia.blueprint.studio.UploadStudioPlugin')]
    [ResourceBundle('com.coremedia.cms.editor.Editor')]
  </fx:Metadata>
  <fx:Script><![CDATA[
    import com.coremedia.blueprint.studio.upload.FileWrapper;
    import com.coremedia.blueprint.studio.upload.UploadSettings;
    import com.coremedia.ui.data.ValueExpressionFactory;
    import com.coremedia.ui.layouts.BEMLayouts;
    import com.coremedia.ui.skins.ButtonSkin;
    import com.coremedia.ui.skins.ContainerSkin;
    import com.coremedia.ui.skins.DisplayFieldSkin;
    import com.coremedia.ui.skins.WindowSkin;

    public static const xtype:String = "com.coremedia.blueprint.studio.config.upload.uploadDialog";
    public static const FOLDER_COMBOBOX:String = 'upload-folder-combo';
    public static const DROP_BOX:String = 'upload-dropBox';
    public static const DROP_LABEL:String = 'upload-drop-label';
    public static const OPEN_IN_TAB_CHECKBOX:String = 'openInTabCheckbox';
    public static const UPLOAD_LIST:String = 'upload-list';

    /**
     * A constant for the file name
     */
    public static const OPEN_IN_TAB_PROPERTY:String = UploadSettings.OPEN_IN_TAB_PROPERTY;

    private var config:UploadDialog;

    public native function UploadDialog(config:UploadDialog = null);
    ]]></fx:Script>

  <local:layout>
    <layout_VBox align="stretch"/>
  </local:layout>
  <local:items>
    <bpb-components:FolderCombo fieldLabel="{resourceManager.getString('com.coremedia.blueprint.studio.UploadStudioPlugin', 'Upload_folder_combo_title')}"
                                folderPathsExpression="{ValueExpressionFactory.createFromFunction(getFolders)}"
                                id_="{FOLDER_COMBOBOX}"
                                labelAlign="top"
                                allowBlank="false"
                                emptyText="{resourceManager.getString('com.coremedia.blueprint.studio.UploadStudioPlugin', 'Upload_folder_combo_emptyText')}"
                                contentType="{config.settings.getDefaultContentType()}"
                                bindTo="{ValueExpressionFactory.create(FileWrapper.UPLOAD_FOLDER_PROPERTY, config.file)}"/>
    <Container flex="1"
               id_="{DROP_BOX}"
               minHeight="80"
               ui="{ContainerSkin.FRAME_GRID_200.getSkin()}">
      <layout>
        <layout_VBox align="center"
                     pack="center"/>
      </layout>
      <items>
        <Button text="{resourceManager.getString('com.coremedia.blueprint.studio.UploadStudioPlugin', 'Upload_drop_button_text')}"
                handler="{uploadButtonHandler}"
                scale="small"
                ui="{ButtonSkin.UPLOAD.getSkin()}">
          <plugins>
            <editor:BrowsePlugin enableFileDrop="true"
                                 multiple="true"
                                 dropEl="{this.el}"/>
          </plugins>
        </Button>
        <DisplayField value="{resourceManager.getString('com.coremedia.blueprint.studio.UploadStudioPlugin', 'Upload_drop_text')}"
                      id_="{DROP_LABEL}"
                      ui="{DisplayFieldSkin.ITALIC.getSkin()}"/>
      </items>
      <plugins>
        <upload:FileDropPlugin dropHandler="{handleDrop}"/>
      </plugins>
    </Container>
    <Container id_="{UPLOAD_LIST}">
      <items>
        <!--New items will be put here-->
      </items>
      <plugins>
        <ui:BEMPlugin block="{BEMLayouts.VERTICAL_SPACING_BLOCK}"
                      defaultElement="{BEMLayouts.VERTICAL_SPACING_ELEMENT_ITEM}"/>
      </plugins>
    </Container>
  </local:items>
  <local:plugins>
    <ui:BEMPlugin block="{BEMLayouts.VERTICAL_SPACING_BLOCK}"
                  defaultElement="{BEMLayouts.VERTICAL_SPACING_ELEMENT_ITEM}"/>
  </local:plugins>
  <local:fbar>
    <Toolbar>
      <items>
        <Checkbox checked="true"
                  id_="{OPEN_IN_TAB_CHECKBOX}"
                  boxLabel="{resourceManager.getString('com.coremedia.blueprint.studio.UploadStudioPlugin', 'Upload_open_in_tab')}"
                  handler="{openInTabHandler}"/>
        <TbFill/>
        <Button ui="{ButtonSkin.FOOTER_PRIMARY.getSkin()}"
                scale="small"
                text="{resourceManager.getString('com.coremedia.blueprint.studio.UploadStudioPlugin', 'Upload_button_label')}"
                handler="{okPressed}">
          <plugins>
            <ui:BindPropertyPlugin componentProperty="disabled"
                                   bindTo="{getUploadButtonDisabledExpression()}"/>
          </plugins>
        </Button>
        <Button ui="{ButtonSkin.FOOTER_SECONDARY.getSkin()}"
                scale="small"
                text="{resourceManager.getString('com.coremedia.cms.editor.Editor', 'dialog_defaultCancelButton_text')}"
                handler="{close}"/>
      </items>
    </Toolbar>
  </local:fbar>

</local:UploadDialogBase>
