<?xml version="1.0" encoding="UTF-8"?>
<exml:plugin xmlns:exml="http://www.jangaroo.net/exml/0.8"
             xmlns="exml:ext.config"
             xmlns:ui="exml:com.coremedia.ui.config"
             xmlns:cat="exml:com.coremedia.blueprint.studio.config.catalog"
             xmlns:editor="exml:com.coremedia.cms.editor.sdk.config">

  <exml:import class="com.coremedia.cms.editor.sdk.collectionview.ICollectionView"/>
  <exml:import class="com.coremedia.cms.editor.sdk.util.ContentLocalizationUtil"/>
  <exml:import class="com.coremedia.ecommerce.studio.ECommerceStudioPlugin_properties"/>

  <exml:constant name="CREATE_CATEGORY_MENU_ITEM_ID" value="createCategory">
    <exml:description>
       The itemId of the delete menu item.
    </exml:description>
  </exml:constant>
  <exml:constant name="CREATE_PRODUCT_MENU_ITEM_ID" value="createProduct">
    <exml:description>
       The itemId of the delete menu item.
    </exml:description>
  </exml:constant>

  <exml:var name="selectionHolder" type="ICollectionView" value="{config.component as ICollectionView}"/>

  <ui:nestedRulesPlugin>

    <ui:rules>

      <editor:folderContentSwitchingContainer>
        <plugins>
          <ui:addItemsPlugin>
            <ui:items>
              <editor:folderContentContainer instanceName="catalog" itemId="{CatalogCollectionViewExtension.CATALOG_FOLDER_CONTAINER_ITEM_ID}"
                                          selectedRepositoryItemsValueExpression="{selectionHolder.getSelectedRepositoryItemsValueExpression()}"
                                          createdContentValueExpression="{selectionHolder.getCreatedContentValueExpression()}"/>
            </ui:items>
          </ui:addItemsPlugin>
        </plugins>
      </editor:folderContentSwitchingContainer>

      <editor:searchSwitchingContainer>
        <plugins>
          <ui:addItemsPlugin>
            <ui:items>
              <cat:repositoryCatalogSearchListContainer/>
            </ui:items>
          </ui:addItemsPlugin>
        </plugins>
      </editor:searchSwitchingContainer>

      <editor:repositoryToolbar>
        <plugins>
          <ui:addItemsPlugin>
            <ui:items>
              <ui:iconButton itemId="unlink">
                <baseAction>
                  <cat:unlinkAction
                          folderValueExpression="{selectionHolder.getSelectedFolderValueExpression()}"
                          contentValueExpression="{selectionHolder.getSelectedItemsValueExpression()}"/>
                </baseAction>
              </ui:iconButton>
            </ui:items>
            <ui:before>
              <component itemId="delete"/>
            </ui:before>
          </ui:addItemsPlugin>
        </plugins>
      </editor:repositoryToolbar>

      <editor:collectionRepositoryContextMenu>
        <plugins>
          <ui:addItemsPlugin>
            <ui:items>
              <menuseparator/>
              <menuitem itemId="unlink">
                <baseAction>
                  <cat:unlinkAction
                          folderValueExpression="{selectionHolder.getSelectedFolderValueExpression()}"
                          contentValueExpression="{selectionHolder.getSelectedRepositoryItemsValueExpression()}"/>
                </baseAction>
              </menuitem>
            </ui:items>
            <ui:after>
              <component itemId="delete"/>
            </ui:after>
          </ui:addItemsPlugin>
        </plugins>
      </editor:collectionRepositoryContextMenu>


      <editor:treeViewContextMenu>
        <plugins>
          <ui:addItemsPlugin index="3">
            <ui:items>
              <menuseparator/>
              <menuitem itemId="{CREATE_CATEGORY_MENU_ITEM_ID}">
                <baseAction>
                  <editor:newContentAction contentType="CMCategory"
                                           hideWhenDisabled="true"
                                           text="{ECommerceStudioPlugin_properties.INSTANCE.Action_createCategory_text}"
                                           folderValueExpression="{selectionHolder.getSelectedFolderValueExpression()}"
                                           createdContentValueExpression="{selectionHolder.getCreatedContentValueExpression()}"
                                           primaryDisabledExpression="{selectionHolder.getNewContentActionDisabledExpression()}"/>
                </baseAction>
              </menuitem>
              <menuitem itemId="{CREATE_PRODUCT_MENU_ITEM_ID}">
                <baseAction>
                  <editor:newContentAction contentType="CMProduct"
                                           hideWhenDisabled="true"
                                           text="{ECommerceStudioPlugin_properties.INSTANCE.Action_createProduct_text}"
                                           folderValueExpression="{selectionHolder.getSelectedFolderValueExpression()}"
                                           createdContentValueExpression="{selectionHolder.getCreatedContentValueExpression()}"
                                           primaryDisabledExpression="{selectionHolder.getNewContentActionDisabledExpression()}"/>
                </baseAction>
              </menuitem>
            </ui:items>
          </ui:addItemsPlugin>
        </plugins>
      </editor:treeViewContextMenu>

      <editor:collectionRepositoryContextMenu>
        <plugins>
          <ui:addItemsPlugin index="4">
            <ui:items>
              <menuseparator/>
              <menuitem itemId="{CREATE_CATEGORY_MENU_ITEM_ID}">
                <baseAction>
                  <editor:newContentAction contentType="CMCategory"
                                           hideWhenDisabled="true"
                                           text="{ECommerceStudioPlugin_properties.INSTANCE.Action_createCategory_text}"
                                           folderValueExpression="{selectionHolder.getSelectedFolderValueExpression()}"
                                           createdContentValueExpression="{selectionHolder.getCreatedContentValueExpression()}"
                                           primaryDisabledExpression="{selectionHolder.getNewContentActionDisabledExpression()}"/>
                </baseAction>
              </menuitem>
              <menuitem itemId="{CREATE_PRODUCT_MENU_ITEM_ID}">
                <baseAction>
                  <editor:newContentAction contentType="CMProduct"
                                           hideWhenDisabled="true"
                                           text="{ECommerceStudioPlugin_properties.INSTANCE.Action_createProduct_text}"
                                           folderValueExpression="{selectionHolder.getSelectedFolderValueExpression()}"
                                           createdContentValueExpression="{selectionHolder.getCreatedContentValueExpression()}"
                                           primaryDisabledExpression="{selectionHolder.getNewContentActionDisabledExpression()}"/>
                </baseAction>
              </menuitem>
            </ui:items>
          </ui:addItemsPlugin>
        </plugins>
      </editor:collectionRepositoryContextMenu>


    </ui:rules>
  </ui:nestedRulesPlugin>
</exml:plugin>
