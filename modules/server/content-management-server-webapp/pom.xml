<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.coremedia.blueprint</groupId>
    <artifactId>server</artifactId>
    <version>1-SNAPSHOT</version>
  </parent>

  <artifactId>content-management-server-webapp</artifactId>
  <packaging>war</packaging>

  <description>
    To start the content-management-server-webapp run: mvn tomcat7:run
  </description>

  <properties>
    <development-properties.dir>${project.basedir}/../../../workspace-configuration/development-properties/default</development-properties.dir>
    <logging-properties.dir>${project.basedir}/../../../workspace-configuration/logging</logging-properties.dir>
  </properties>

  <dependencies>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>contentserver-blueprint-component</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>content-management-server-config</artifactId>
      <type>coremedia-application</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>content-management-server-config</artifactId>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.blueprint.base</groupId>
      <artifactId>bpbase-multisite-impl</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-multisite</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>coremedia</finalName>
    <plugins>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <nonFilteredFileExtensions>
            <fileExtension>zip</fileExtension>
          </nonFilteredFileExtensions>
          <overlays>
            <overlay>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>content-management-server-config</artifactId>
              <type>coremedia-application</type>
              <targetPath>WEB-INF</targetPath>
              <excludes>
                <!--exclude the content feeder configuration, as the content feeder is deployed as a separate webapp-->
                <exclude>config/contentserver/spring/feeder/**</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>

      <!--
         invoke "mvn tomcat7:run" for running this webapp locally but make sure that you run mvn:package first
      -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <configuration>
          <path>/${project.build.finalName}</path>
          <port>40180</port>
          <systemProperties>
            <propertieslocations>classpath:/content-management-server.properties</propertieslocations>
            <!--workaround for CMS-7024, but this workaround requires building the webapp first-->
            <cap.server.search.context.configLocations>file:#{T(hox.corem.Corem).getHome()}/../../../../target/coremedia/WEB-INF/config/contentserver/spring/search/applicationContext.xml</cap.server.search.context.configLocations>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--
           invoke "mvn spring-boot:run" for running this webapp on http://localhost:8080/
        -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>embedded</id>
      <properties>
        <development-properties.dir>${project.basedir}/../../../workspace-configuration/development-properties/embedded-hsqldb</development-properties.dir>
        <!-- embedded SQL config -->
        <sql.store.driver>org.hsqldb.jdbc.JDBCDriver</sql.store.driver>
        <sql.store.url>jdbc:hsqldb:mem:cmmanagement;sql.syntax_mys=true;</sql.store.url>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
