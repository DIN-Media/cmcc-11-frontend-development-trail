<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.coremedia.blueprint</groupId>
    <artifactId>server</artifactId>
    <version>1-SNAPSHOT</version>
  </parent>

  <artifactId>master-live-server-webapp</artifactId>
  <packaging>war</packaging>

  <description>
    To start the master-live-server-webapp run: mvn tomcat7:run-war
  </description>

  <properties>
    <development-properties.dir>${project.basedir}/../../../workspace-configuration/development-properties/default</development-properties.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>contentserver-blueprint-component</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>master-live-server-config</artifactId>
      <type>coremedia-application</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>master-live-server-config</artifactId>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-el</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-logging-juli</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>coremedia</finalName>
    <plugins>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <nonFilteredFileExtensions>
            <fileExtension>zip</fileExtension>
          </nonFilteredFileExtensions>
          <overlays>
            <overlay>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>master-live-server-config</artifactId>
              <type>coremedia-application</type>
              <targetPath>WEB-INF</targetPath>
            </overlay>
          </overlays>
        </configuration>
      </plugin>

      <!--
         invoke "mvn tomcat7:run-war" for running this webapp locally
      -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <configuration>
          <path>/${project.build.finalName}</path>
          <port>40280</port>
          <systemProperties>
            <propertieslocations>classpath:/master-live-server.properties</propertieslocations>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <!--
           invoke "mvn spring-boot:run" for running this webapp on http://localhost:8080/
        -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <!--
            build executable war that can be run like this:
            JAVA_OPTS="<PUT_SYSTEM_PROPS_HERE>" $(PATH_TO_MODULE_ARTIFACT)

            only set to 'true' if chef run won't fail on warning when unzipping the webapp
          -->
          <executable>false</executable>
        </configuration>
      </plugin>
      <!--
          disable dependency check for spring-web
        -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <usedDependencies>
            <usedDependency>org.springframework:spring-web</usedDependency>
          </usedDependencies>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>internal-licenses</id>
      <!--
      | Please change the groupId,artifactId and version to your specific development license artifact or remove it completely
      | if you check your development license into VCS. The repository definition for the remote repository containing the
      | license should be added as a profile in your settings.xml.
      -->
      <dependencies>
        <dependency>
          <groupId>com.coremedia.cms.license</groupId>
          <artifactId>development-license</artifactId>
          <version>[16-SNAPSHOT]</version>
          <type>war</type>
          <classifier>publication</classifier>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
