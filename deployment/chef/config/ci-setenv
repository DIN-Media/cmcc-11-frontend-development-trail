#!/bin/bash -ex

# generate executables to the installed gems in .bin of the workspace (--binstubs) with the correct ruby
# for jenkins slaves that have more than one executor we need to separate the bundle paths, otherwise there will be race conditions

if [[ -e /opt/chefdk/bin/chef ]]; then
  echo "Found chefdk:"
  /opt/chefdk/bin/chef --version
  eval "$(/opt/chefdk/bin/chef shell-init bash)"
  cp ./chefdk/Gemfile* ./
  bundle install
elif [[ -d /opt/chef/embedded/bin ]]; then
  echo "Found chef-client:"
  /opt/chef/embedded/bin/chef-client --version
  CHEF_RUBY_PATH=/opt/chef/embedded/bin
  ##########################################################
  if [[ `rpm -q gecode` ]]; then
    export USE_SYSTEM_GECODE=1
  else
    echo "you should better install gecode package, otherwise bundle install will take plenty of time the first time."
  fi
  test -f ${CHEF_RUBY_PATH}/bundle || echo "you need to install bundler, execute ${CHEF_RUBY_PATH}/gem install bundler"
  cp ./chef-client/Gemfile* ./
  ${CHEF_RUBY_PATH}/bundle install --binstubs --deployment --path=${HOME}/.bundle${EXECUTOR_NUMBER} --jobs 2 --retry 3 --shebang=${CHEF_RUBY_PATH}/ruby
  # add the binstubs to the path
  export PATH=${CHEF_RUBY_PATH}:$(pwd)/bin:$PATH
else
  echo "you need to install either chef-dk or chef first"
  exit 1
fi

set +e
vagrant_installation=$(which vagrant)
set -e
if [[ -x "${vagrant_installation}" ]]; then
  echo "using vagrant installation from ${vagrant_installation}"
else
  echo "faking vagrant installation for testkitchen"
  echo "echo Vagrant 1.8.1" > /tmp/vagrant
  chmod u+x /tmp/vagrant
  sudo mv /tmp/vagrant /usr/bin/vagrant
fi