<%
# AWS Settings
aws_ssh_key = ENV.fetch('AWS_SSH_KEY_ID', '')
aws_availability_zone = ENV.fetch('AWS_AVALIBILITY_ZONE', '')
aws_region = ENV.fetch('AWS_REGION', '')
aws_subnet_id = ENV.fetch('AWS_SUBNET_ID', '')
aws_security_group_id = ENV.fetch('AWS_SECURITY_GROUP_ID', '')
aws_shared_credentials_profile = ENV.fetch('AWS_SHARED_CREDENTIALS_PROFILE', '')
aws_vpc_id = ENV.fetch('AWS_VPC_ID', '')

env_def = 'valid'
["aws_ssh_key", "aws_availability_zone", "aws_region", "aws_subnet_id", "aws_security_group_id", "aws_vpc_id"].each do |env|
  if (eval(env.to_s) == '')
    puts "Environment Variable #{env.upcase} is not defined."
    env_def = 'invalid'
  end
end

if (env_def != 'invalid')
  puts '===================== AWS Settings =========================='
  puts " AWS_AVALIBILITY_ZONE:                #{aws_availability_zone}"
  puts " AWS_REGION:                          #{aws_region}"
  puts " AWS_SUBNET_ID:                       #{aws_subnet_id}"
  puts " AWS_SECURITY_GROUP_IDS:              #{aws_security_group_id}"
  puts " AWS_VPC_IDS:                         #{aws_vpc_id}"
  puts '============================================================='
else
  print "\n[ERROR] kitchen-ec2 config is not valid! define missing env vars.\n\n\n"
  raise ("kitchen-ec2 config is not valid! define missing env vars.")
end
%>
---

platforms:
- name: ec2
  driver:
    tags:
      Name: "cookbook-test"
      autodelete: "true"
    name: ec2
    shared_credentials_profile: <%= aws_shared_credentials_profile %>
    aws_ssh_key_id: <%= aws_ssh_key %>
    availability_zone: <%= aws_availability_zone %>
    region: <%= aws_region %>
    instance_type: "t2.small"
    subnet_id: <%= aws_subnet_id %>
    security_group_ids: ["<%= aws_security_group_id %>"]
    vpc: true
    vpc_id: <%= aws_vpc_id %>
    # using amzn-ami-hvm-2016.09.1.20161221-x86_64-gp2
    image_id: ami-c51e3eb6
  transport:
    ssh_key: <%= File.expand_path('~/.ssh/id_rsa') %>
    connection_timeout: 10
    connection_retries: 5
    username: ec2-user

suites:
- name: default
  # add platforms to test to this array, by default only one is listed so a simple kitchen converge will run this suite
  includes: [ec2]
  run_list:
    - recipe[blueprint-yum::default]
    - recipe[blueprint-mysql::server]
    - recipe[blueprint-dev-tooling::databases]
  attributes:
    blueprint:
      dev:
        db:
          host: localhost
          type: mysql