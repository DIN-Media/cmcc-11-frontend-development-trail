########################################################################################################################
# CoreMedia Application Properties
#
# Please refer to https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
# on how to configure a Spring Boot application.
#
# Properties with empty values here need to be set externally for each deployment.
########################################################################################################################

com.coremedia.corba.server.port=8083

####################################
# Spring Boot Properties           #
####################################
spring.application.name=content-server
management.server.port=8081

# this adds the runlevel health endpoint to the readiness endpoint to be used in Kubernetes or as a startup check in
# startup scripts. The runlevel endpoint then switches to a 200 HTTP return code for 8081/actuator/health/readiness,
# when runlevel online is reached.
management.endpoint.health.group.readiness.include=readinessState,runlevel

# Logging Properties
logging.pattern.console = %clr(%d{yyyy-MM-dd HH:mm:ss} -){faint} %clr(%7([%level])) %clr(%logger){cyan} [%X{tenant}] %clr(-){faint} %message \\(%thread\\)%n
logging.pattern.file = %d{yyyy-MM-dd HH:mm:ss} %-7([%level]) %logger [%X{tenant}] - %message \\(%thread\\)%n
logging.level.root = warn
logging.level.com.coremedia = info
logging.level.cap = info
logging.level.hox = info
logging.level.org.apache.tomcat = warn
logging.level.org.apache.catalina = warn

# Tomcat Properties
server.tomcat.mbeanregistry.enabled=true
