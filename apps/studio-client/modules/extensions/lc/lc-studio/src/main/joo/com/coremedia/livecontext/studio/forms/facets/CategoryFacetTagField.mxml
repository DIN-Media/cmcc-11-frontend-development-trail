<?xml version="1.0" encoding="UTF-8"?>
<facets:CategoryFacetTagFieldBase xmlns:fx="http://ns.adobe.com/mxml/2009"
                                  xmlns:ui="exml:com.coremedia.ui.config"
                                  xmlns:exml="http://www.jangaroo.net/exml/0.8"
                                  xmlns="exml:ext.config"
                                  xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
                                  xmlns:u="exml:untyped" xmlns:facets="com.coremedia.livecontext.studio.forms.facets.*"
                                  fieldLabel="{FacetUtil.localizeFacetLabel(config.facet.getLabel())}"
                                  emptyText="{resourceManager.getString('com.coremedia.livecontext.studio.LivecontextStudioPlugin', 'CategoryFacetTagField_emptyText')}"
                                  labelAlign="top"
                                  labelSeparator=""
                                  filterPickList="true"
                                  valueField="{QUERY}"
                                  displayField="{LABEL}"
                                  queryMode="local"
                                  triggerAction="all"
                                  publishes="{LABEL}"
                                  multiSelect="{config.facet.isMultiSelect()}"
                                  ariaRole="textbox"
                                  forceSelection="true"
                                  anchor="100%">
  <fx:Metadata>
    [ResourceBundle('com.coremedia.livecontext.studio.LivecontextStudioPlugin')]
  </fx:Metadata>

  <fx:Script><![CDATA[
    import com.coremedia.ecommerce.studio.components.search.filters.FacetUtil;
    import com.coremedia.ui.data.ValueExpressionFactory;

    public static const xtype:String = "com.coremedia.livecontext.studio.config.categoryFacetTagField";

    private var config:CategoryFacetTagField;

    public native function CategoryFacetTagField(config:CategoryFacetTagField = null);
    ]]></fx:Script>

  <facets:plugins exml:mode="append">
    <ui:BindListPlugin bindTo="{ValueExpressionFactory.createFromValue(config.facet.getValues())}"
                       ifUndefined="{[]}"
                       sortDirection="ASC"
                       sortField="{LABEL}">
      <ui:fields>
        <ui:DataField name="{LABEL}" encode="false"/>
        <ui:DataField name="{QUERY}" encode="false"/>
      </ui:fields>
    </ui:BindListPlugin>
    <editor:ShowIssuesPlugin bindTo="{config.bindTo}"
                             ifUndefined=""
                             propertyName="{config.structPropertyName + '.' + CategoryFacetsPropertyFieldBase.PRODUCT_LIST_STRUCT_NAME + '.' + CategoryFacetsPropertyFieldBase.MULTI_FACETS_STRUCT_NAME + '.' + config.facet.getKey()}"/>
    <editor:BindReadOnlyPlugin forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"
                               bindTo="{config.bindTo}"/>
    <editor:PropertyFieldPlugin
            propertyName="{config.structPropertyName + '.' + CategoryFacetsPropertyFieldBase.PRODUCT_LIST_STRUCT_NAME + '.' + CategoryFacetsPropertyFieldBase.MULTI_FACETS_STRUCT_NAME + '.' + config.facet.getKey()}"/>
  </facets:plugins>

</facets:CategoryFacetTagFieldBase>
