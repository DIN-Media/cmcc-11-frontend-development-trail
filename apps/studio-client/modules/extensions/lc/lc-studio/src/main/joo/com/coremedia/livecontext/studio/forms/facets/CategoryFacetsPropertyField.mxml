<?xml version="1.0" encoding="UTF-8"?>
<facets:CategoryFacetsPropertyFieldBase
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
        xmlns="exml:ext.config"
        xmlns:ui="exml:com.coremedia.ui.config"
        xmlns:exml="http://www.jangaroo.net/exml/0.8"
        xmlns:facets="com.coremedia.livecontext.studio.forms.facets.*"
        title="{resourceManager.getString('com.coremedia.livecontext.studio.LivecontextStudioPlugin', 'CMProductList_facets_text')}"
        itemId="categoryFacetsPropertyField">
  <fx:Script><![CDATA[
    import com.coremedia.ui.bem.SpacingBEMEntities;
    import com.coremedia.ui.mixins.OverflowBehaviour;
    import com.coremedia.ui.skins.ButtonSkin;
    import com.coremedia.ui.skins.DisplayFieldSkin;

    public static const xtype:String = "com.coremedia.livecontext.studio.config.categoryFacetsPropertyField";
    public static const SWITCH_BUTTON_ITEM_ID:String = "migrationButton";
    public static const FIX_BUTTON_ITEM_ID:String = "autoFixButton";

    private var config:CategoryFacetsPropertyField;

    public native function CategoryFacetsPropertyField(config:CategoryFacetsPropertyField = null);
    ]]></fx:Script>
  <fx:Metadata>
    [ResourceBundle('com.coremedia.livecontext.studio.LivecontextStudioPlugin')]
  </fx:Metadata>

  <facets:items>
    <Container>
      <items>
        <DisplayField hidden="true" value="{resourceManager.getString('com.coremedia.livecontext.studio.LivecontextStudioPlugin', 'CMProductList_facets_remove_invalid_values_description')}">
          <plugins>
            <ui:BindPropertyPlugin componentProperty="visible" bindTo="{getAutoFixExpression(config)}" />
          </plugins>
        </DisplayField>
        <Button hidden="true"
                ui="{ButtonSkin.LINK.getSkin()}"
                margin="0 0 0 -2"
                handler="{autoFixFormat}"
                itemId="{FIX_BUTTON_ITEM_ID}"
                text="{resourceManager.getString('com.coremedia.livecontext.studio.LivecontextStudioPlugin', 'CMProductList_facets_remove_invalid_values')}">
          <plugins>
            <ui:BindPropertyPlugin componentProperty="visible" bindTo="{getAutoFixExpression(config)}" />
            <editor:BindDisablePlugin forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"
                                      bindTo="{config.bindTo}"/>
          </plugins>
        </Button>
        <DisplayField hidden="true" value="{resourceManager.getString('com.coremedia.livecontext.studio.LivecontextStudioPlugin', 'CMProductList_facets_mode_switch_description')}">
          <plugins>
            <ui:BindPropertyPlugin componentProperty="hidden" bindTo="{getBtnVisibilityExpression(config)}" />
          </plugins>
        </DisplayField>
        <Button text="{resourceManager.getString('com.coremedia.livecontext.studio.LivecontextStudioPlugin', 'CMProductList_facets_mode_switch')}"
                handler="{toggleFacetMode}"
                margin="0 0 0 -2"
                itemId="{SWITCH_BUTTON_ITEM_ID}"
                ui="{ButtonSkin.LINK.getSkin()}">
          <plugins>
            <editor:BindDisablePlugin forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"
                                      bindTo="{config.bindTo}"/>
            <ui:BindPropertyPlugin componentProperty="hidden" bindTo="{getBtnVisibilityExpression(config)}"/>
          </plugins>
        </Button>
      </items>
      <layout>
        <layout_VBox />
      </layout>
    </Container>
    <ui:SwitchingContainer activeItemValueExpression="{getActiveEditorExpression(config)}">
      <ui:items>
        <ui:ExtendedDisplayField itemId="{NO_CATEGORY_MSG_ITEM_ID}"
                                 ui="{DisplayFieldSkin.SUB_LABEL_READONLY.getSkin()}"
                                 overflowBehaviour="{OverflowBehaviour.BREAK_WORD}"
                                 value="{resourceManager.getString('com.coremedia.livecontext.studio.LivecontextStudioPlugin', 'CategoryFacetFiltersGroup_noCategory')}"/>
        <facets:CategoryFacetsFieldGroup
                itemId="{NEW_EDITOR_ITEM_ID}"
                bindTo="{config.bindTo}"
                facetsExpression="{getFacetsExpression(config)}"
                structPropertyName="{config.structPropertyName}"
                externalIdPropertyName="{config.externalIdPropertyName}"
                forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"
                facetValuePropertyName="{config.structPropertyName + '.' + PRODUCT_LIST_STRUCT_NAME}"/>
        <facets:SingleCategoryFacetsFieldGroup
                itemId="{OLD_EDITOR_ITEM_ID}"
                bindTo="{config.bindTo}"
                facetsExpression="{getFacetsOrLegacyFacetsExpression(config)}"
                forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"
                facetNamePropertyName="{config.structPropertyName + '.' + PRODUCT_LIST_STRUCT_NAME + '.' + SINGLE_FACET_NAME}"
                facetValuePropertyName="{config.structPropertyName + '.' + PRODUCT_LIST_STRUCT_NAME + '.' + SINGLE_FACET_VALUE}"/>
      </ui:items>
    </ui:SwitchingContainer>
  </facets:items>
  <facets:plugins>
    <ui:VerticalSpacingPlugin modifier="{SpacingBEMEntities.VERTICAL_SPACING_MODIFIER_200}"/>
  </facets:plugins>
  <facets:layout>
    <layout_VBox align="stretch"/>
  </facets:layout>
</facets:CategoryFacetsPropertyFieldBase>
