##################
# Security options
##################

# disable the "X-Application-Context" HTTP header in each response
management.add-application-context-header=false

# disable management security to allow unauthorized access
management.security.enabled=false

# Limit the maximum allowed execution time, set in milliseconds. Defaults to 0 = no limit.
# When the limit is exceed during execution, the execution is aborted.
# caas.graphql.max-query-execution-time=2000

# Limit the maximum allowed depth (integer) of a graphql query to protect the server. Defaults to 30.
# The limit is enforced before the actual query execution.
# caas.graphql.max-query-depth=30

# Limit the maximum allowed complexity (integer) of a graphql query to protect the server. Defaults to 0 = no limit
# The limit is enforced before the actual query execution.
# caas.graphql.max-query-complexity=500

# Limit the count of search results hits. Defaults to 200.
# caas.graphql.max-search-limit=200


################
# Output options
################

# pretty print JSON output
caas.log-requests=false


###############################################
# Cache capacities for the CaaS cache instances
###############################################

caas.cache-specs[richtext]=recordStats,maximumWeight=10000000
caas.cache-specs[automatic-persisted-queries]=recordStats,maximumWeight=100000


##########################################################
# Cache capacities for the CoreMedia global cache instance
##########################################################

# default size for cache keys with CacheKey#cacheClass returning the default "java.lang.Object"
# caas.cache-capacities[java.lang.Object]=20000


######################
# Response cache times
######################

# maxAge cache header for (possibly transformed) media blobs, in seconds
caas.media-cache-time=604800

#######################
# UAPI cache capacities
#######################

#repository.heapCacheSize=-1
#repository.blobCacheSize=-1
#repository.blobStreamingSizeThreshold=-1
#repository.blobStreamingThreads=-1
#repository.maxCachedBlobSize=-1
#repository.blobCachePath=


###############################################
# Settings for the image transformation service
###############################################

# set to true to enable the site specific image variants
imageTransformation.dynamicVariants = true

# the default jpeg quality used for cropping
imageTransformation.defaultJpegQuality = 0.8

# images are sharpened by default
imageTransformation.sharpen = true

# if true, the "rm" image operation will be applied to remove the image metadata
imageTransformation.removeMetadata = true

#########################################
# Settings for the transformed blob cache
#########################################

# base path for the persistent blob cache
# if not set, transformed blobs are not cached persistently
#com.coremedia.transform.blobCache.basePath=

# max allowed disk space usage
#com.coremedia.transform.blobCache.size=1000000000

spring.main.allow-bean-definition-overriding=true

################################################
# Cache capacities for the global cache instance
################################################

# default size for cache keys with CacheKey#cacheClass returning the default "java.lang.Object"
caas.cache-capacities[java.lang.Object]=5000

# set to true to enable ContextTracer
caas.context.trace.enabled=false


# monitoring
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

########################################################################################################################
# Spring Boot Properties
########################################################################################################################

spring.application.name=headless-server-preview

spring.main.banner-mode=OFF
management.server.port=8081
# the xmpcore jar has no manifest and tomcat then gets confused which jar it should scan leading to an NPE warning
server.tomcat.additional-tld-skip-patterns=xmpcore*.jar
server.tomcat.mbeanregistry.enabled=true

# Logging
logging.level.root = warn
logging.level.com.coremedia = info
logging.level.cap = info
logging.level.org.apache.tomcat = warn
logging.level.org.apache.catalina = warn


########################################################################################################################
# CoreMedia Application Properties
#
# Please refer to https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
# on how to configure a Spring Boot application.
#
# Properties with empty values here need to be set externally for each deployment.
########################################################################################################################

# URL of the repository IOR
repository.url=
solr.url=
caas.solr.collection=

########################################################################################################################
# Settings for preview
########################################################################################################################

# enable preview mode
caas.preview=false

# embedded GraphiQL endpoint, set to false for live server:
graphiql.enabled=false
graphiql.static.basePath=/graphiql/static/

#preview client
previewclient.url=

caas.swagger.enabled=false
caas.search.cache.seconds=5
caas.querylist.search.cache.seconds=5

########################################################################################################################
# Persisted Queries Settings
########################################################################################################################

# Resource pattern for persisted queries, one query per resource file. The filename w/o extension serves as the query id.
# See also: Spring PathMatchingResourcePatternResolver class.
#caas.persisted-queries.query-resources-pattern=classpath:graphql/queries/*.graphql

# Resource pattern for persisted queries in Apollo Manifest format:
#caas.persisted-queries.query-resources-map-pattern.apollo=classpath:graphql/queries/apollo*.json

# Resource pattern for persisted queries in Relay Compiler format:
#caas.persisted-queries.query-resources-map-pattern.relay=classpath:graphql/queries/relay*.json

# Any resource files matching this regular expression are excluded from the resource resolving process above:
#caas.persisted-queries.query-resources-exclude-pattern=.*Fragment(s)?.graphql

# set this to true to disallow any queries not loaded by the headless server. Default is false:
#caas.persisted-queries.whitelist=false

# set this to false to disallow processing and caching of Apollo automatic persisted queries.
# Default is true
# BUT: if whitelisting is enabled and an upload is requested,
# the upload is rejected if the normalized form of the query is not equal to the normalized form of some whitelisted query:
#caas.persisted-queries.automatic=true

######################################################
# Commerce Hub Configuration                         #
######################################################

# Activate a 'commerce.hub.data.endpoints.*' property only when a commerce adapter connection is
# actually needed in local development. Activating all of these properties here by default would
# cause recurring connection attempts when the connected content server contains sides with
# commerce adapter connections activated, and the logs flooded with loads of connect exceptions).

# Mock
#commerce.hub.data.endpoints.mock=localhost:44065

# Salesforce
#commerce.hub.data.endpoints.sfcc=localhost:44165

# Hybris
#commerce.hub.data.endpoints.hybris=localhost:44265

# IBM
#commerce.hub.data.endpoints.wcs=localhost:44365

commerce.hub.data.customEntityParams.catalogVersion=${COMMERCE_HUB_CUSTOMENTITYPARAMS_CATALOGVERSION}

# The following properties are needed to serve Category and Product image urls via a CAE instance.
# Default initial URL prefixes for our example sites:
blueprint.site.mapping.calista=http://localhost:49080
blueprint.site.mapping.helios=http://localhost:49080
blueprint.site.mapping.corporate=http://localhost:49080


